import{_ as a,c as e,o as s,a as l}from"./app.1c303544.js";const u=JSON.parse('{"title":"Usage","description":"","frontmatter":{"title":"Usage"},"headers":[{"level":2,"title":"Checking Targeted Robot","slug":"checking-targeted-robot","link":"#checking-targeted-robot","children":[]},{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[]}],"relativePath":"cli/install/usage.md"}'),n={name:"cli/install/usage.md"},o=l(`<h2 id="checking-targeted-robot" tabindex="-1">Checking Targeted Robot <a class="header-anchor" href="#checking-targeted-robot" aria-hidden="true">#</a></h2><p>Next the Poppy robot turns on and is ready (green light blinking), the following command could be performed first in order to ensure the robot is available:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">poppy config -M</span></span>
<span class="line"></span></code></pre></div><p>It looks up to a robot located at &#39;poppy.local&#39;, dicovers it and display its structure.</p><p>Note connection parameters (aka hostname and REST API port) could be easily changed and persisted (respectively see <a href="/poppy-robot-cli/cli/connection/cli.html">here</a> and <a href="/poppy-robot-cli/cli/connection/persisting.html">there</a>).</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">poppy config -M --host poppy1.local</span></span>
<span class="line"></span></code></pre></div><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-hidden="true">#</a></h2><p>Typing:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">poppy -h</span></span>
<span class="line"></span></code></pre></div><p>will display global help and list all the available commands.</p><p>Details about a command could be displayed typing:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">poppy </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">command</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> -h</span></span>
<span class="line"></span></code></pre></div>`,12),t=[o];function p(c,i,r,d,h,g){return s(),e("div",null,t)}const y=a(n,[["render",p]]);export{u as __pageData,y as default};
