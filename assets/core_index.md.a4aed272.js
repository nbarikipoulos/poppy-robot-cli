import{_ as e,c as t,o as s,a as o}from"./app.1c303544.js";const f=JSON.parse('{"title":"Core Module","description":"","frontmatter":{"title":"Core Module"},"headers":[],"relativePath":"core/index.md"}'),n={name:"core/index.md"},a=o(`<p>This part is dedicated to script writers.</p><p>This module:</p><ul><li>Firstly exposes the <a href="https://github.com/nbarikipoulos/poppy-robot-core" target="_blank" rel="noreferrer">poppy-robot-core</a> API,</li><li>On a second hand, it aims to ease connection settings appending: <ul><li>The connection flags --host/--port introduced with the poppy CLI,</li><li>The persisting of these settings into a file.</li></ul></li></ul><p>To this end, it wraps the utility factories (aka functions prefixed by create) in order to manage these new features.</p><p>At the end, it allows to launch scripts moving users&#39; connection settings to the cli:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">node myScript.js --host </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poppy1.local</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> -p 8081</span></span>
<span class="line"></span></code></pre></div>`,6),i=[a];function p(l,r,c,d,h,_){return s(),t("div",null,i)}const y=e(n,[["render",p]]);export{f as __pageData,y as default};
