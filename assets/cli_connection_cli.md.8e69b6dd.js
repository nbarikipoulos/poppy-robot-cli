import{_ as t,c as e,o,a as n}from"./app.ea318fab.js";const g=JSON.parse('{"title":"Connection Settings","description":"","frontmatter":{"title":"Connection Settings"},"headers":[],"relativePath":"cli/connection/cli.md"}'),s={name:"cli/connection/cli.md"},a=n(`<p>By default, connection values are set to poppy ergo jr default ones aka the host and rest API port are respectively set to poppy.local and 8080.</p><p>These connection settings could be changed via the flags listed below:</p><table><thead><tr><th>option</th><th>desc</th><th>value</th><th>default</th></tr></thead><tbody><tr><td>-H/--host</td><td>Set the Poppy hostname/IP</td><td>string</td><td>poppy.local</td></tr><tr><td>-p/--port</td><td>Set the REST API port on Poppy</td><td>integer</td><td>8080</td></tr></tbody></table><p>As example,</p><div class="language-shell"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">poppy config -MD --host </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poppy1.local</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> -p 8081</span></span>
<span class="line"></span></code></pre></div><p>Will discover the configuration of robot with hostname and rest API port respectively set to &#39;poppy1.local&#39; and 8081.</p><p>To avoid typing the connection settings values every time, users can persist them in a rc like file through the &#39;config&#39; command of the CLI as explained in dedicated <a href="/poppy-robot-cli/cli/connection/persisting.html">part</a>.</p>`,7),p=[a];function c(l,i,r,d,h,_){return o(),e("div",null,p)}const f=t(s,[["render",c]]);export{g as __pageData,f as default};
